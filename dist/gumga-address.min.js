(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){"use strict";require("./address.service.js");"use strict";AddressDirective.$inject=["GumgaAddressService","$http","$compile"];function AddressDirective(GumgaAddressService,$http,$compile){var templateBegin='<div class="row">'+' <div class="col-md-12 col-sm-12 col-xs-12">'+"   <accordion>"+'\t  <accordion-group is-open="false" heading="{{::title}}">';var blockCountryCep='<div class="row">'+' <div class="col-md-8">'+'\t<div class="form-group">'+'     <label for="País">País</label>'+'\t  <select ng-readonly="true" ng-model="value.country" class="form-control" ng-options="pais for pais in factoryData.availableCountries"></select>'+"\t</div>"+"\t</div>"+' <div class="col-md-4">'+'\t<div class="form-group">'+'     <label for="input{{::id}}">CEP</label>'+'\t  <div class="input-group">'+'\t\t<input type="text" class="form-control" ng-model="value.zipCode" maxlength="8" id="input{{::id}}" ng-keypress="custom($event,value.zipCode)">'+'\t\t<span class="input-group-btn">'+'\t      <button class="btn btn-primary" type="button" ng-click="searchCep(value.zipCode)" ng-disabled="loader{{::id}}" id="buttonSearch{{::id}}"><i class="glyphicon glyphicon-search"></i></button>'+"\t\t</span>"+"\t  </div>"+"\t</div>"+" </div>"+"</div>";var streetType='<div class="form-group">'+' <label for="tipoLogradouro">Tipo Logradouro</label>'+' <input type="text" ng-model="value.premisseType" uib-typeahead="type for type in streetTypes | filter:$viewValue | limitTo:8" typeahead-editable="false" typeahead-show-hint="true" typeahead-min-length="0" class="form-control" typeahead-editable="false" typeahead-show-hint="true" typeahead-min-length="0">'+"</div>";var street='<div class="form-group">'+' <label for="Logradouro">Logradouro</label>'+' <input type="text" ng-model="value.premisse" class="form-control id="oi"/>'+"</div>";var number='<div class="form-group">'+'\t\t<label for="Número">Número</label>'+'\t\t<input type="text" ng-model="value.number" class="form-control" id="numberInput{{::id}}"/>'+"</div>";var blockStreet='<div class="row">'+'\t\t<div class="col-md-4">'+streetType+"\t\t</div>"+'\t\t<div class="col-md-8">'+street+"\t\t</div>"+"</div>";var blockStreetNumber='<div class="row">'+'\t\t<div class="col-md-4">'+streetType+"\t\t</div>"+'\t\t<div class="col-md-5">'+street+"\t\t</div>"+'\t\t<div class="col-md-3">'+number+"\t\t</div>"+"</div>";var blockComplement='<div class="row">'+'\t\t<div class="col-md-12">'+'\t\t\t\t<div class="form-group">'+'\t\t\t\t\t\t<label for="Complemento">Complemento</label>'+'\t\t\t\t\t\t<input type="text" ng-model="value.information" class="form-control"/>'+"\t\t\t\t</div>"+"\t\t</div>"+"</div>";var blockNeighbourhood='<div class="row">'+'\t\t<div class="col-md-12">'+'\t\t\t\t<div class="form-group">'+'\t\t\t\t\t\t<label for="Bairro">Bairro</label>'+'\t\t\t\t\t\t<input type="text" ng-model="value.neighbourhood" class="form-control"/>'+"\t\t\t\t</div>"+"\t\t</div>"+"</div>";var state='<div class="form-group">'+'   <label for="UF">UF</label>'+'\t\t<select ng-model="value.state" class="form-control" ng-options="uf for uf in factoryData.ufs"></select>'+"</div>";var city='<div class="form-group">'+'\t\t<label for="Localidade">Localidade</label>'+'\t\t<input type="text" ng-model="value.localization" class="form-control"/>'+"</div>";var codIBGE='<div class="form-group">'+'\t\t<label for="CodIBGE{{::id}}">Código</label>'+'\t\t<input type="text" ng-model="value.codigo_ibge" class="form-control" id="CodIBGE{{::id}}"/>'+"</div>";var blockStateCity='<div class="row">'+'\t\t<div class="col-md-4">'+state+"\t\t</div>"+'\t\t<div class="col-md-8">'+city+"\t\t</div>"+"</div>";var blockStateCityIBGE='<div class="row">'+'\t\t<div class="col-md-4">'+state+"\t\t</div>"+'\t\t<div class="col-md-4">'+city+"\t\t</div>"+'\t\t<div class="col-md-4">'+codIBGE+"\t\t</div>"+"</div>";var blockLatLng='<div class="row">'+'\t\t<div class="col-md-6">'+'       <div class="form-group">'+'\t\t        <label for="Latitude{{::id}}">Latitude</label>'+'\t\t        <input type="text" ng-model="value.lat" class="form-control" id="Latitude{{::id}}"/>'+"       </div>"+"\t\t</div>"+'\t\t<div class="col-md-6">'+'       <div class="form-group">'+'\t\t        <label for="Longitude{{::id}}">Longitude</label>'+'\t\t        <input type="text" ng-model="value.lng" class="form-control" id="Longitude{{::id}}"/>'+"       </div>"+"\t\t</div>"+"</div>";var blockMaps='<div class="row">'+'\t\t<div class="col-md-12">'+'\t\t\t\t<button type="button" class="btn btn-default btn-block" ng-disabled="!value.localization" ng-click="openMaps(value)" target="_blank">Maps <i class="glyphicon glyphicon-globe"></i></button>'+"\t\t</div>"+"</div>";var templateEnd="\t\t\t\t\t\t</accordion-group>"+"\t\t\t\t</accordion>"+"\t\t</div>"+"</div>";return{restrict:"E",scope:{value:"=",onSearchCepStart:"&?",onSearchCepSuccess:"&?",onSearchCepError:"&?"},link:function link(scope,elm,attrs,ctrl){function isEmpty(obj){for(var key in obj){if(obj.hasOwnProperty(key)){return false}}return true}function forceAttr2Bool(attr){return attr==undefined||attr=="true"?true:false}if(isEmpty(scope.value))scope.value=GumgaAddressService.returnFormattedObject();attrs.countryCep=forceAttr2Bool(attrs.countryCep);attrs.street=forceAttr2Bool(attrs.street);attrs.streetNumber=forceAttr2Bool(attrs.streetNumber);attrs.complement=forceAttr2Bool(attrs.complement);attrs.neighborhood=forceAttr2Bool(attrs.neighborhood);attrs.stateCity=forceAttr2Bool(attrs.stateCity);attrs.stateCityIbge=forceAttr2Bool(attrs.stateCityIbge);attrs.latLng=forceAttr2Bool(attrs.latLng);attrs.maps=forceAttr2Bool(attrs.maps);scope.streetTypes=["AV","AVENIDA","RUA","ROD.","BC","TRAVESSA","ALAMEDA","VIELA","CAMINHO","ESTRADA","PRAÇA","PASSAGEM","VILA","VIADUTO","RODOVIA","BECO","ACESSO","LARGO","VIA","CAMPO","MONTE","LADEIRA","CALÇADA","LOTEAMENTO","ROTATÓRIA","PASSEIO","NÚCLEO","PARQUE","ANTIGA","LAGO","BOULEVARD","ACAMPAMENTO","COMPLEXO","CONTORNO","BALÇO","CONJUNTO","MORRO","CONDOMÍNIO","TERMINAL","ESCADA","FAVELA","COLÔNIA","RECANTO","ALTO","ILHA","JARDIM","PASSARELA","PONTE","GALERIA","VALE","VEREDA","ENTRADA","BULEVAR","TRECHO","TÚNEL","ESTACIONAMENTO","QUADRA","BOSQUE","RETORNO","PÁTIO","PRAIA","RAMAL","BAIXA","CHÁCARA","SÍTIO","UNIDADE","RESIDENCIAL","FEIRA","ESTAÇÂO","RÓTULA","CANAL","FAZENDA","RETIRO","SETOR","RAMPA","ESPLANADA","CAMPUS","BLOCO","CENTRO","MÓDULO","ESTÁDIO","ESCADARIA","AEROPORTO","SERVIDÃO","FERROVIA","TREVO","PORTO","ATALHO","DISTRITO","CORREDOR","FONTE","CÓRREGO","CIRCULAR","CAIS","SUBIDA","LAGOA","PROLONGAMENTO","DESCIDA","PARALELA","ELEVADA","RETA","PONTA","VALA","BURACO","MARINA","FORTE","PARADA","LINHA","FRANCISCO","MARECHAL","ROD.","CICLOVIA"];if(!attrs.name)console.error("É necessário passar um parâmetro 'name' como identificador para GumgaAddress");if(!(!attrs.street||!attrs.streetNumber)||!(!attrs.stateCity||!attrs.stateCityIbge))console.error("É necessário usar ao menos um dos elementos principais [street ou street-number e state-city ou state-city-ibge] para GumgaAddress");if(!attrs.countryCep&&(attrs.onSearchCepStart||attrs.onSearchCepSuccess||attrs.onSearchCepError))throw"É necessário uso do atributo country-cep para uso das funções [on-search-cep-start / on-search-cep-success / on-search-cep-error]";var template="";template=template.concat(templateBegin);if(attrs.countryCep)template=template.concat(blockCountryCep);if(attrs.stateCity)template=template.concat(blockStateCity);if(attrs.stateCityIbge)template=template.concat(blockStateCityIBGE);if(attrs.neighborhood)template=template.concat(blockNeighbourhood);if(attrs.street)template=template.concat(blockStreet);if(attrs.streetNumber)template=template.concat(blockStreetNumber);if(attrs.complement)template=template.concat(blockComplement);if(attrs.latLng)template=template.concat(blockLatLng);if(attrs.maps)template=template.concat(blockMaps);template=template.concat(templateEnd);elm.append($compile(template)(scope));scope.title=attrs.title||"Endereço";scope.id=attrs.name;scope["loader"+scope.id]=false;scope["maps"+scope.id]=false;scope.factoryData={ufs:GumgaAddressService.everyUf,logs:GumgaAddressService.everyLogradouro,availableCountries:GumgaAddressService.availableCountries};scope.value.country=scope.factoryData.availableCountries[0];var eventHandler={searchCepStart:attrs.onSearchCepStart?scope.onSearchCepStart:angular.noop,searchCepSuccess:attrs.onSearchCepSuccess?scope.onSearchCepSuccess:angular.noop,searchCepError:attrs.onSearchCepError?scope.onSearchCepError:angular.noop};scope.custom=function($event,cep){$event.charCode==13?scope.searchCep(cep):angular.noop};scope.openMaps=function(value){if(!value.number){value.number=""}var maps="https://www.google.com.br/maps/place/"+value.premisseType+" "+value.premisse+","+value.number+","+value.localization;window.open(maps)};scope.returnLink=function(value){if(!value.number){value.number=""}return"https://www.google.com.br/maps/place/"+value.premisseType+" "+value.premisse+","+value.number+","+value.localization};scope.searchCep=function(cep){scope["loader"+scope.id]=true;eventHandler.searchCepStart();$http.get("http://www.gumga.com.br/services-api/public/cep/"+cep).then(function(response){eventHandler.searchCepSuccess({$value:response.data});scope["loader"+scope.id]=false;if(parseInt(response.data.resultado)==1){scope.value.premisseType=response.data.tipo_logradouro?response.data.tipo_logradouro:scope.value.premisseType;scope.value.premisse=response.data.logradouro?response.data.logradouro:scope.value.premisse;scope.value.localization=response.data.cidade?response.data.cidade:scope.value.localization;scope.value.neighbourhood=response.data.bairro?response.data.bairro:scope.value.neighbourhood;scope.value.state=response.data.uf?response.data.uf:scope.value.state;scope.value.latitude=response.data.latitude;scope.value.longitude=response.data.longitude;scope.value.formalCode=response.data.ibge_cod_cidade;scope.value.country="Brasil"}},function(error){return eventHandler.searchCepError({$value:data})})};if(scope.value.zipCode){scope.searchCep(scope.value.zipCode)}}}}angular.module("gumga.address",["gumga.address.services"]).directive("gumgaAddress",AddressDirective)},{"./address.service.js":2}],2:[function(require,module,exports){"use strict";(function(){"use strict";AddressService.$inject=[];function AddressService(){return{everyUf:["AC","AL","AM","AP","BA","CE","DF","ES","GO","MA","MG","MS","MT","PA","PB","PE","PI","PR","RJ","RN","RR","RS","SC","SE","SP","TO"],everyLogradouro:["Outros","Aeroporto","Alameda","Área","Avenida","Campo","Chácara","Colônia","Condomínio","Conjunto","Distrito","Esplanada","Estação","Estrada","Favela","Fazenda","Feira","Jardim","Ladeira","Largo","Lago","Lagoa","Loteamento","Núcleo","Parque","Passarela","Pátio","Praça","Quadra","Recanto","Residencial","Rodovia","Rua","Setor","Sítio","Travessa","Trevo","Trecho","Vale","Vereda","Via","Viaduto","Viela","Via"],availableCountries:["Brasil"],returnFormattedObject:function returnFormattedObject(){return{zipCode:null,premisseType:null,premisse:null,number:null,information:null,neighbourhood:null,localization:null,state:null,country:null}}}}angular.module("gumga.address.services",[]).factory("GumgaAddressService",AddressService)})()},{}]},{},[1]);